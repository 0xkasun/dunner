name: Dunner CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [macOS-latest]
    steps:
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: '1.11.x'

    - name: Debug
      run: |
        pwd
        echo ${HOME}
        echo ${GITHUB_WORKSPACE}
        echo ${GOPATH}
        echo ${GOROOT}

    - name: Checkout Dunner
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/leopardslab/dunner

    - name: Build Dunner and run unit tests
      if: matrix.os == 'ubuntu-latest'
      env:
        GOPATH: /home/runner/work/dunner/go
      run: |
        mkdir -p $(go env GOPATH)/bin
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        $(go env GOPATH)/bin/dep ensure -v
        make setup
        make ci
        $GOPATH/bin/dunner version
        $GOPATH/bin/dunner do show

    - name: Build Dunner and run unit tests
      if: matrix.os == 'macOS-latest'
      env:
        GOPATH: /Users/runner/runners/2.157.2/work/dunner/go
      run: |
        brew install docker docker-machine
        brew services start docker-machine
        docker-machine create --driver virtualbox default
        eval "$(docker-machine env default)"
        docker ps
        brew install dep
        dep ensure -v
        make setup DEP=dep
        make ci DEP=dep
        $GOPATH/bin/dunner version
        $GOPATH/bin/dunner do show


    - name: Build Dunner and run unit tests
      if: matrix.os == 'windows-latest'
      env:
        GOPATH: /home/runner/work/dunner/go
      run: |
        mkdir -p $(go env GOPATH)/bin
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        $(go env GOPATH)/bin/dep ensure -v
        make setup DEP=dep
        make ci DEP=dep
        $GOPATH/bin/dunner version
        $GOPATH/bin/dunner do show
